function createfigure_Flux(YData1, XData1, YData2, X1, YMatrix1)
%CREATEFIGURE(YData1, XData1, YData2, X1, YMatrix1)
%  YDATA1:  patch ydata
%  XDATA1:  patch xdata
%  YDATA2:  patch ydata
%  X1:  vector of plot x data
%  YMATRIX1:  matrix of plot y data

%  Auto-generated by MATLAB on 25-Sep-2025 15:34:29

% Create figure
figure1 = figure('InvertHardcopy','off','Color',[1 1 1]);

% Create axes
axes1 = axes;
hold(axes1,'on');

% Create patch
patch('DisplayName','Efflux Region','YData',YData1,'XData',XData1,...
    'FaceAlpha',0.1,...
    'FaceColor',[0 0.447058826684952 0.74117648601532],...
    'EdgeColor','none');

% Create patch
patch('DisplayName','Influx Region','YData',YData2,'XData',XData1,...
    'FaceAlpha',0.1,...
    'FaceColor',[1 0 0],...
    'EdgeColor','none');

% Create multiple line objects using matrix input to plot
plot1 = plot(X1,YMatrix1,'LineWidth',2);
set(plot1(1),'DisplayName','J_{succ}');
set(plot1(2),'DisplayName','J_{mal}');
set(plot1(3),'DisplayName','J_{pho}');

% Create ylabel
ylabel('Flux (\mumol/min/g)','FontWeight','bold');

% Create xlabel
xlabel('Time (min)','FontWeight','bold');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes1,[0 1]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes1,[-210 210]);
% Uncomment the following line to preserve the Z-limits of the axes
% zlim(axes1,[-1 1]);

grid(axes1,'on');
hold(axes1,'off');
% Set the remaining axes properties
set(axes1,'FontSize',30,'FontWeight','bold');
% Create legend
legend1 = legend(axes1,'show');
set(legend1,'FontSize',30);

% Create axes
axes2 = axes('Position',...
    [0.273481551093086 0.653076923076923 0.235794341675735 0.219230769230769]);
hold(axes2,'on');

% Create patch
patch('DisplayName','Efflux Region','YData',YData1,'XData',XData1,...
    'FaceAlpha',0.1,...
    'FaceColor',[0 0.447058826684952 0.74117648601532],...
    'EdgeColor','none');

% Create patch
patch('DisplayName','Influx Region','YData',YData2,'XData',XData1,...
    'FaceAlpha',0.1,...
    'FaceColor',[1 0 0],...
    'EdgeColor','none');

% Create multiple line objects using matrix input to plot
plot2 = plot(X1,YMatrix1,'LineWidth',2);
set(plot2(1),'DisplayName','J_{succ}');
set(plot2(2),'DisplayName','J_{mal}');
set(plot2(3),'DisplayName','J_{pho}');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes2,[0 0.01]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes2,[-210 210]);
% Uncomment the following line to preserve the Z-limits of the axes
% zlim(axes2,[-1 1]);

grid(axes2,'on');
hold(axes2,'off');
% Set the remaining axes properties
set(axes2,'FontSize',30,'FontWeight','bold');
% Create axes
axes3 = axes('Position',...
    [0.553523537881537 0.202307692307692 0.235794341675734 0.219230769230769]);
hold(axes3,'on');

% Create patch
patch('DisplayName','Efflux Region','YData',YData1,'XData',XData1,...
    'FaceAlpha',0.1,...
    'FaceColor',[0 0.447058826684952 0.74117648601532],...
    'EdgeColor','none');

% Create patch
patch('DisplayName','Influx Region','YData',YData2,'XData',XData1,...
    'FaceAlpha',0.1,...
    'FaceColor',[1 0 0],...
    'EdgeColor','none');

% Create multiple line objects using matrix input to plot
plot3 = plot(X1,YMatrix1,'LineWidth',2);
set(plot3(1),'DisplayName','J_{succ}');
set(plot3(2),'DisplayName','J_{mal}');
set(plot3(3),'DisplayName','J_{pho}');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes3,[0 1]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes3,[-3 3]);
% Uncomment the following line to preserve the Z-limits of the axes
% zlim(axes3,[-1 1]);

grid(axes3,'on');
hold(axes3,'off');
% Set the remaining axes properties
set(axes3,'FontSize',30,'FontWeight','bold');
% Create arrow
annotation(figure1,'arrow',[0.146464646464646 0.200757575757576],...
    [0.553846153846154 0.62],'LineWidth',2);

% Create arrow
annotation(figure1,'arrow',[0.534090909090909 0.453282828282829],...
    [0.436923076923077 0.501538461538461],'LineWidth',2);

